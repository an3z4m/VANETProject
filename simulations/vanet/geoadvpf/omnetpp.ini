[General]
debug-on-errors = true
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10000000s
record-eventlog = true

ned-path = .

network =GEOADVPFSim

num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2

##########################################################
#            Simulation parameters                       #
##########################################################
print-undisposed = false

sim-time-limit = 6000s

**.scalar-recording = true
**.vector-recording = true

**.debug = false
**.coreDebug = false

*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.moduleType = "vanetsim.simulations._nodes.GEOADVPFCar"
*.manager.moduleName = "vehicle"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#                       RSU SETTINGS                     #
##########################################################
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3
*.rsu[*].applType = "TraCIDemoRSU11p" 
*.rsu[*].appl.debug = false
*.rsu[*].appl.headerLength = 256 bit
*.rsu[*].appl.sendBeacons = false
*.rsu[*].appl.dataOnSch = false
*.rsu[*].appl.sendData = true
*.rsu[*].appl.beaconInterval = 1s
*.rsu[*].appl.beaconPriority = 3
*.rsu[*].appl.dataPriority = 2
*.rsu[*].appl.maxOffset = 0.005s

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.connectionManager.pMax = 20mW
*.connectionManager.sat = -89dBm
*.connectionManager.alpha = 2.0
*.connectionManager.carrierFrequency = 5.890e9 Hz
*.connectionManager.sendDirect = true

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 18Mbps

*.**.nic.phy80211p.sensitivity = -89dBm
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -110dBm
*.**.nic.phy80211p.usePropagationDelay = true

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 18Mbps

*.**.nic.phy80211p.sensitivity = -89dBm
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -110dBm
*.**.nic.phy80211p.usePropagationDelay = true

*.**.nic[*].mac1609_4.useServiceChannel = false

*.**.nic[*].mac1609_4.txPower = 20mW
*.**.nic[*].mac1609_4.bitrate = 18Mbps

*.**.nic[*].phy80211p.sensitivity = -89dBm
*.**.nic[*].phy80211p.useThermalNoise = true
*.**.nic[*].phy80211p.thermalNoise = -110dBm
*.**.nic[*].phy80211p.usePropagationDelay = true

*.**.nic[*].mac1609_4.useServiceChannel = false

*.**.nic[*].mac1609_4.txPower = 20mW
*.**.nic[*].mac1609_4.bitrate = 18Mbps

*.**.nic[*].phy80211p.sensitivity = -89dBm
*.**.nic[*].phy80211p.useThermalNoise = true
*.**.nic[*].phy80211p.thermalNoise = -110dBm
*.**.nic[*].phy80211p.usePropagationDelay = true
##########################################################
#                    WaveAppLayer                        #
##########################################################
*.vehicle[*].applType = "TraCIDemo11p"
*.vehicle[*].appl.debug = false
*.vehicle[*].appl.headerLength = 256 bit
*.vehicle[*].appl.sendBeacons = false
*.vehicle[*].appl.dataOnSch = false
*.vehicle[*].appl.sendData = true
*.vehicle[*].appl.beaconInterval = 1s
*.vehicle[*].appl.beaconPriority = 3
*.vehicle[*].appl.dataPriority = 2
*.vehicle[*].appl.maxOffset = 0.005s

##########################################################
#                      Mobility                          #
##########################################################
**.veinsmobilityType = "org.car2x.veins.modules.mobility.traci.TraCIMobility"
**.veinsmobilityType.debug = true
**.mobility.x = 0
**.mobility.y = 0
**.mobility.z = 1.895

##########################################################
#                   UDP Apps(on)                         #
##########################################################
**.numUdpApps = 1
**.udpApp[*].typename = "UDPBasicBurst"
**.udpApp[*].destAddresses = moduleListByPath("**.vehicle[*](ipv4)")
**.udpApp[*].localPort = 1234
**.udpApp[*].destPort = 1234
**.udpApp[*].messageLength = 512B # Bytes
**.udpApp[*].sendInterval = 0.25s + uniform(-0.001s,0.001s,1)
**.udpApp[*].burstDuration = 0s #uniform(1s,4s,1)
**.udpApp[*].sleepDuration = 0s
**.udpApp[*].chooseDestAddrMode = "perSend"
**.udpApp[*].startTime = uniform(1s,60s,1)
**.udpApp[*].delayLimit =20s
**.udpApp[*].destAddrRNG = 1

**.udpapp.*.vector-recording = true

# tcp apps (off)
**.numTcpApps = 0
**.tcpAppType = "TelnetApp"

# ping app (host[0] pinged by others)
# ping app (off)
**.pingApp.count = 0
**.pingApp.startTime = 1s
**.pingApp.printPing = true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
#**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true

# ip settings
**.ip.procDelay = 10us
# **.forwarding=false

######################################################################
#                   Routing
######################################################################

**.networkLayer.configurator.networkConfiguratorModule = ""

# channel physical parameters
*.radioMediumType = "IdealRadioMedium"
*.vehicle[*].routing.wlan[*].radioType = "IdealRadio"
*.vehicle[*].routing.wlan[*].radio.transmitter.bitrate = 2Mbps
*.vehicle[*].routing.wlan[*].radio.transmitter.maxCommunicationRange = 250m
*.vehicle[*].routing.wlan[*].radio.transmitter.maxInterferenceRange = 0m
*.vehicle[*].routing.wlan[*].radio.transmitter.maxDetectionRange = 0m
*.vehicle[*].routing.wlan[*].radio.receiver.ignoreInterference = true
*.radioMedium.mediumVisualizer.displayCommunication = true
*.radioMedium.mediumVisualizer.updateCanvasInterval = 100ns
*.radioMedium.mediumVisualizer.leaveCommunicationTrail = true

#sender
#*.vehicle[*].routing.numPingApps = 1
#*.vehicle[*].routing.pingApp[0].startTime = uniform(1s,5s)
#*.vehicle[*].routing.pingApp[0].printPing = true

######################################################################

######################################################################
# GEOADVPF Config
######################################################################

[Config GEOADVPF-Simple]
*.manager.launchConfig = xmldoc("..\\_maps\\simple\\sumotest.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\_maps\\simple\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\_maps\\simple\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\_maps\\simple\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\_maps\\simple\\config.xml")
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2000m
*.playgroundSizeZ = 50m
**.roiRects = "0,100-2200,2000"#x,y-X,Y

[Config GEOADVPF-Simple-100]
extends = GEOADVPF-Simple
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\simple\\sumotest100.launchd.xml")

[Config GEOADVPF-Simple-200]
extends = GEOADVPF-Simple
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\simple\\sumotest200.launchd.xml")

[Config GEOADVPF-Simple-300]
extends = GEOADVPF-Simple
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\simple\\sumotest300.launchd.xml")

[Config GEOADVPF-i95]
*.manager.launchConfig = xmldoc("..\\_maps\\i95highway\\i95highway.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\_maps\\i95highway\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\_maps\\i95highway\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\_maps\\i95highway\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\i95highway\\simple\\config.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-8000,15000"#x,y-X,Y

[Config GEOADVPF-i95-100]
extends = GEOADVPF-i95
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\i95highway\\i95highway100.launchd.xml")

[Config GEOADVPF-i95-200]
extends = GEOADVPF-i95
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\i95highway\\i95highway200.launchd.xml")

[Config GEOADVPF-i95-300]
extends = GEOADVPF-i95
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\i95highway\\i95highway300.launchd.xml")

[Config GEOADVPF-Orlando]
description = "GEOADVPF"
*.manager.launchConfig = xmldoc("..\\_maps\\downtownorlando\\downtownorlando.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\_maps\\downtownorlando\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\_maps\\downtownorlando\\config.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-2000,2000"#x,y-X,Y

[Config GEOADVPF-SanFrancisco]
description = "GEOADVPF"
*.annotations.draw = false
*.obstacles.debug = true
*.world.useTorus = true
*.world.use2D = true
*.manager.launchConfig = xmldoc("..\\_maps\\sanfrancisco\\sanfrancisco.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\_maps\\sanfrancisco\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\_maps\\sanfrancisco\\config.xml")
*.obstacles.obstacles = xmldoc("..\\_maps\\sanfrancisco\\sanfrancisco.obstacles.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-2000,2000"#x,y-X,Y

[Config GEOADVPF-Erlangen]
description = "GEOADVPF"
*.annotations.draw = true
*.obstacles.debug = true
*.obstacles.obstacles = xmldoc("..\\_maps\\erlangen\\config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.manager.launchConfig = xmldoc("..\\_maps\\erlangen\\erlangen.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\_maps\\erlangen\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\_maps\\erlangen\\config.xml")
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m
*.vehicle[*0].host[*].mobility.accidentCount = 1
*.vehicle[*0].host[*].mobility.accidentStart = 75s
*.vehicle[*0].host[*].mobility.accidentDuration = 30s

[Config GEOADVPF-ManhattanGrid]
description = "GEOADVPF"
*.annotations.draw = true
*.obstacles.debug = true
*.obstacles.obstacles = xmldoc("..\\_maps\\manhattangrid\\config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.manager.launchConfig = xmldoc("..\\_maps\\manhattangrid\\manhattangrid.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\_maps\\manhattangrid\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\_maps\\manhattangrid\\config.xml")
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m

