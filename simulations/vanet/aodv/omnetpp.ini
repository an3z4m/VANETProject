[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s

ned-path = .

network = AODVSim

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = false

sim-time-limit = 6000s

**.scalar-recording = true
**.vector-recording = true

**.debug = false

##########################################################
#            VeinsInetManager parameters             #
##########################################################
*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true

*.manager.moduleType = "vanetsim.simulations.vanet.aodv.AODVCar"
*.manager.moduleName = "vehicle"
#*.manager.moduleDisplayString = ""

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 250m
*.connectionManager.drawMaxIntfDist = true

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 6Mbps
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -98dBm

#*.**.nic.phy80211p.decider = xmldoc("config.xml")
#*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

#*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
*.vehicle[*].nic.phy80211p.antennaOffsetY = 0 m
*.vehicle[*].nic.phy80211p.antennaOffsetZ = 1.895 m

##########################################################
#                      App Layer                         #
##########################################################
*.rsu[*].applType = "TraCIDemoRSU11p"
*.vehicle[*].applType = "TraCIDemo11p"
*.vehicle[*].appl.headerLength = 80 bit
*.vehicle[*].appl.sendBeacons = false
*.vehicle[*].appl.dataOnSch = false
*.vehicle[*].appl.beaconInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.vehicle[*].mobilityType = "VeinsInetMobility"
*.vehicle[*].mobility.constraintAreaMinX = 0m
*.vehicle[*].mobility.constraintAreaMinY = 0m
*.vehicle[*].mobility.constraintAreaMinZ = 0m
*.vehicle[*].veinsmobility.x = 0
*.vehicle[*].veinsmobility.y = 0
*.vehicle[*].veinsmobility.z = 0
*.vehicle[*].veinsmobility.setHostSpeed = false

##########################################################
#                   UDP Apps(on)                         #
##########################################################
**.numUdpApps = 1
**.udpApp[*].typename = "UDPBasicApp"
**.udpApp[*].destAddresses = "224.0.0.1"
**.udpApp[*].multicastInterface = "wlan0"
**.udpApp[*].joinLocalMulticastGroups = true
**.udpApp[*].localPort = 9001
**.udpApp[*].destPort = 9001
**.udpApp[*].messageLength = 100B
**.udpApp[*].startTime = uniform(0s, 5s)
**.udpApp[*].sendInterval = 5s
**.hasThrugmeter = true

######################################################################
#                   Routing
######################################################################
num-rngs = 3
**.mobility.rng-0 = 1
**.routing.wlan[*].mac.rng-0 = 2

**.configurator.networkConfiguratorModule = ""
*.radioMediumType = "Ieee80211ScalarRadioMedium"
**.routing.activeRouteTimeout = 3s
**.routing.forwarding = true

# Ieee80211MgmtAdhoc
**.routing.wlan[*].mgmtType = "Ieee80211MgmtAdhoc"
**.routing.wlan[*].radio.transmitter.communicationRange = 250m
**.routing.wlan[*].radio.transmitter.interferenceRange = 250m
**.routing.wlan[*].radio.transmitter.detectionRange = 0m
**.routing.wlan[*].radio.displayCommunicationRange = true
**.routing.wlan[*].radio.displayInterferenceRange =  true

# nic settings
**.routing.wlan[*].bitrate = 2Mbps
**.routing.wlan[*].mac.dcf.channelAccess.cwMin = 7
**.routing.wlan[*].radio.transmitter.power = 2mW
**.routing.wlan[*].mgmt.frameCapacity = 10
**.routing.wlan[*].mac.address = "auto"
**.routing.wlan[*].mac.maxQueueSize = 14
**.routing.wlan[*].mac.rtsThresholdBytes = 3000B
**.routing.wlan[*].mac.retryLimit = 7
**.routing.wlan[*].mac.cwMinData = 7
**.routing.wlan[*].mac.cwMinMulticast = 31

#sender
**.routing.numApps = 1
**.routing.app[0].typename = "PingApp"
**.routing.app[0].startTime = uniform(1s,5s)
**.routing.app[0].printPing = true
#*.vehicle[*].routing.app[*].destAddr = "rsu[0](ipv4)"

######################################################################

######################################################################
# AODV Config
######################################################################

[Config AODV-Simple]
*.manager.launchConfig = xmldoc("..\\..\\_maps\\simple\\sumotest.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\..\\_maps\\simple\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\..\\_maps\\simple\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\..\\_maps\\simple\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\..\\_maps\\simple\\config.xml")
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2000m
*.playgroundSizeZ = 50m
**.roiRects = "0,100-2200,2000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3
*.vehicle[*].mobility.constraintAreaMaxX = 2000m
*.vehicle[*].mobility.constraintAreaMaxY = 2000m
*.vehicle[*].mobility.constraintAreaMaxZ = 0m

[Config AODV-Simple-100]
extends = AODV-Simple
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\simple\\sumotest100.launchd.xml")
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-Simple-200]
extends = AODV-Simple
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\simple\\sumotest200.launchd.xml")
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-Simple-300]
extends = AODV-Simple
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\simple\\sumotest300.launchd.xml")
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-i95]
*.manager.launchConfig = xmldoc("..\\..\\_maps\\i95highway\\i95highway.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\..\\_maps\\i95highway\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\..\\_maps\\i95highway\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\..\\_maps\\i95highway\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\..\\_maps\\i95highway\\config.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-8000,15000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-i95-100]
extends = AODV-i95
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\i95highway\\i95highway100.launchd.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-8000,15000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-i95-200]
extends = AODV-i95
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\i95highway\\i95highway200.launchd.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-8000,15000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-i95-300]
extends = AODV-i95
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\i95highway\\i95highway300.launchd.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-8000,15000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-Orlando]
description = "AODV"
*.manager.launchConfig = xmldoc("..\\..\\_maps\\downtownorlando\\downtownorlando.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\..\\_maps\\downtownorlando\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\..\\_maps\\downtownorlando\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\..\\_maps\\downtownorlando\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\..\\_maps\\downtownorlando\\config.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-2000,2000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-SanFrancisco]
description = "AODV"
*.annotations.draw = false
*.obstacles.debug = true
*.world.useTorus = true
*.world.use2D = true
*.manager.launchConfig = xmldoc("..\\..\\_maps\\sanfrancisco\\sanfrancisco.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\..\\_maps\\sanfrancisco\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\..\\_maps\\sanfrancisco\\config.xml")
*.obstacles.obstacles = xmldoc("..\\..\\_maps\\sanfrancisco\\sanfrancisco.obstacles.xml")
*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m
**.roiRects = "0,0-2000,2000"#x,y-X,Y
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-Erlangen]
description = "AODV"
*.annotations.draw = true
*.obstacles.debug = true
*.obstacles.obstacles = xmldoc("..\\..\\_maps\\erlangen\\config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.manager.launchConfig = xmldoc("..\\..\\_maps\\erlangen\\erlangen.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\..\\_maps\\erlangen\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\..\\_maps\\erlangen\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\..\\_maps\\erlangen\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\..\\_maps\\erlangen\\config.xml")
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m
*.vehicle[*0].host[*].mobility.accidentCount = 1
*.vehicle[*0].host[*].mobility.accidentStart = 75s
*.vehicle[*0].host[*].mobility.accidentDuration = 30s
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

[Config AODV-ManhattanGrid]
description = "AODV"
*.annotations.draw = true
*.obstacles.debug = true
*.manager.launchConfig = xmldoc("..\\..\\_maps\\manhattangrid\\manhattangrid.launchd.xml")
*.**.nic.phy80211p.decider = xmldoc("..\\..\\_maps\\manhattangrid\\config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("..\\..\\_maps\\manhattangrid\\config.xml")
*.**.nic[*].phy80211p.decider = xmldoc("..\\..\\_maps\\manhattangrid\\config.xml")
*.**.nic[*].phy80211p.analogueModels = xmldoc("..\\..\\_maps\\manhattangrid\\config.xml")
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m
*.numberOfRSU = 1
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3
